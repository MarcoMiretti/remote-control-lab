variables:
  WORK_PATH: /home/esp/esp-open-rtos/examples/project
  FIRMWARE_BIN_DIR: firmware
  WIFI_VARS_PATH: include/private_ssid_config.h
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - lint
  - build
  - burn
  - test
  - api-docs
  - docs

# template jobs
.code-style:
  stage: lint
  before_script:
    - cd $WORK_PATH
    - cp -r $CI_PROJECT_DIR/$DEVICE_ESP_DIR/* .
    - envsubst < $WIFI_VARS_PATH | sponge $WIFI_VARS_PATH
  script:
    - make lint
  tags:
    - fw-build

.build-device:
  stage: build
  before_script:
    - cd $WORK_PATH
    - cp -r $CI_PROJECT_DIR/$DEVICE_ESP_DIR/* .
    - envsubst < $WIFI_VARS_PATH | sponge $WIFI_VARS_PATH
  script:
    - make
    - mkdir $CI_PROJECT_DIR/$DEVICE_ESP_DIR/firmware
    - cp $FIRMWARE_BIN_DIR/* $CI_PROJECT_DIR/$DEVICE_ESP_DIR/$FIRMWARE_BIN_DIR/image.bin
  tags:
    - fw-build
  artifacts:
    paths:
    - $CI_PROJECT_DIR/$DEVICE_ESP_DIR/$FIRMWARE_BIN_DIR/image.bin
    expire_in: 1 week

.flash-device:
  variables:
    ESP_PORT: /dev/ttyUSB0
    BAUD_RATE: 115200
    FW_POSITION: 0x2000
  stage: burn
  script:
    - esptool.py --port $ESP_PORT --baud $BAUD_RATE write_flash $FW_POSITION $DEVICE_ESP_DIR/$FIRMWARE_BIN_DIR/*.bin
  tags:
    - fw-burn

.test-device:
  stage: test
  script:
    - python3 -m unittest discover -v -s $DEVICE/tests
  tags:
    - testing

.base-rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - $DEVICE/**/*
    - if: '$CI_COMMIT_BRANCH == "master"'

.manual-rules:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
      changes:
        - $DEVICE/**/*
      when: manual
    - if: '$CI_COMMIT_BRANCH == "master"'
      when: manual

.aero:
  variables:
    DEVICE: aeropendulum
    DEVICE_ESP_DIR: aeropendulum/esp
  extends: .base-rules

.experimental:
  variables:
    DEVICE: experimental
    DEVICE_ESP_DIR: experimental/esp

# device specific jobs
style-aero:
  extends:
    - .aero
    - .code-style
  needs: []

style-experimental:
  extends:
    - .experimental
    - .code-style
    - .base-rules
  needs: []

build-aero:
  extends:
    - .aero
    - .build-device
  needs: []

build-experimental:
  extends:
    - .experimental
    - .build-device
    - .manual-rules
  needs: []

flash-aero:
  extends:
    - .aero
    - .flash-device
  needs: ["build-aero"]

flash-experimental:
  extends:
    - .experimental
    - .flash-device
    - .base-rules
  needs: ["build-experimental"]

test-aero:
  extends:
    - .aero
    - .test-device
  needs: ["flash-aero"]

# generic jobs
openapi:
  stage: api-docs
  image: node:latest
  script:
  - npm install -g redoc-cli
  - mkdir -p public/
  - redoc-cli bundle -o public/openapi.html docs/api.yaml
  artifacts:
    paths:
    - public
  only:
    - master

pages:
  stage: docs
  image: nxpleuvenjenkins/doxygen
  script:
    - doxygen .gci/Doxyfile
    - mv $CI_PROJECT_DIR/public/html/* $CI_PROJECT_DIR/public
  tags:
    - testing
  artifacts:
    paths:
      - $CI_PROJECT_DIR/public/*
    expire_in: 1 week
  only:
    - master
